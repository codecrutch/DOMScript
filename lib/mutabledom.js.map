{"version":3,"sources":["webpack/bootstrap 9e1e4cbc8d39f4f8208f","./lib/mutableNodeList.js","./lib/main.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA,mDAA2C,cAAc;;AAEzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;AAEA;AACA;;;;;;;AChEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL,qBAAqB,0BAA0B;AAC/C;AACA;AACA;AACA;;AAEA;AACA,mBAAmB,0BAA0B;AAC7C;AACA;AACA;;AAEA;AACA,mBAAmB,0BAA0B;AAC7C;AACA;AACA;;AAEA;AACA,mBAAmB,0BAA0B;AAC7C;AACA;AACA;;AAEA;;AAEA;AACA;AACA,mBAAmB,0BAA0B;AAC7C;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,mBAAmB,aAAa;AAChC;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA,mBAAmB,0BAA0B;AAC7C;AACA;AACA;;AAEA;AACA;;AAEA;AACA,mBAAmB,0BAA0B;AAC7C;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,uCAAuC,UAAU;AACjD;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA,uCAAuC,UAAU;AACjD;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;;AAEA,iC;;;;;;AC5IA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,sDAAsD;AACtD;AACA;AACA,uBAAuB;AACvB,qBAAqB;AACrB,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;;AAEA;AACA,GAAG;AACH;;AAEA;AACA;;AAEA;AACA;AACA,sDAAsD;AACtD;AACA;AACA,uBAAuB;AACvB,qBAAqB;AACrB,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;;AAEA;AACA,GAAG;AACH;;;AAGA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,CAAC,E","file":"mutabledom.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 9e1e4cbc8d39f4f8208f","class MutableNodeList {\n  constructor(elements) {\n    this.elements = elements;\n  }\n\n  html(html) {\n    if (typeof html === \"string\") {\n      this.forEach(node => node.innerHTML = html);\n    } else {\n      if (this.elements.length > 0) {\n        return this.elements[0].innerHTML;\n      }\n    }\n  }\n\n  clearHTML() {\n    this.html('');\n  }\n\n  append(children) {\n    if (this.elements.length === 0) return;\n\n    // ensure argument is coerced into MutableNodeList\n    if (typeof children === 'object' && !(children instanceof MutableNodeList)) {\n      children = $MD(children);\n    }\n\n    if (typeof children === \"string\") {\n      this.forEach(node => node.innerHTML += children);\n    } else if (children instanceof MutableNodeList) {\n      // You can't append the same child node to multiple parents,\n      // so we must duplicate the child nodes here.\n      this.forEach(node => {\n        // The argument to cloneNode indicates whether or not\n        // all children should be cloned.\n        children.forEach(childNode => {\n          node.appendChild(childNode.cloneNode(true));\n        });\n      });\n    }\n  }\n\n  attr(attribute, val) {\n    if (val === undefined) {\n      return this.elements[0].getAttribute(attribute);\n    } else {\n      for (var i = 0; i < this.elements.length; i++) {\n        this.elements[i].setAttribute(attribute, val);\n      }\n    }\n  }\n\n  addClass(klass) {\n    for (var i = 0; i < this.elements.length; i++) {\n      this.elements[i].classList.add(klass);\n    }\n  }\n\n  removeClass(klass) {\n    for (var i = 0; i < this.elements.length; i++) {\n      this.elements[i].classList.remove(klass);\n    }\n  }\n\n  toggleClass(klass) {\n    for (var i = 0; i < this.elements.length; i++) {\n      this.elements[i].classList.toggle(klass);\n    }\n  }\n\n  // TRAVERSAL\n\n  children() {\n    let nodesList = [];\n    for (let i = 0; i < this.elements.length; i++) {\n      if (this.elements[i].children) {\n        nodesList.push(this.elements[i].children);\n      }\n    }\n\n    return new MutableNodeList(Array.from(nodesList[0]));\n  }\n\n  parent() {\n    let nodesList = [];\n    this.forEach(({ parentNode }) => (\n      parentNode.visited ? parentNodes.push(parentNode) : parentNode.visited = true\n    ));\n\n    parentNodes.forEach(node => node.visited = false)\n\n    return new MutableNodeList(nodesList);\n  }\n\n  find(selector) {\n    let nodesList = [];\n    for (var i = 0; i < this.elements.length; i++) {\n      let child = this.elements[i].querySelectorAll(selector);\n      if (child.length > 0) nodesList.push(child);\n    }\n\n    return new MutableNodeList(Array.from(nodesList[0]));\n  }\n\n  remove() {\n    for (var i = 0; i < this.elements.length; i++) {\n      this.elements[i].parentNode.removeChild(this.elements[i]);\n    }\n\n    this.elements = new MutableNodeList();\n  }\n\n  listen(eventName, callback) {\n    this.forEach(node => {\n      node.addEventListener(eventName, callback);\n      const eventKey = `mutableEvent-${eventName}`;\n      if (typeof node[eventKey] === \"undefined\") {\n        node[eventKey] = [];\n      }\n      node[eventKey].push(callback);\n    });\n  }\n\n  forget(eventName) {\n    this.forEach(node => {\n      const eventKey = `mutableEvent-${eventName}`;\n      if (node[eventKey]) {\n        node[eventKey].forEach(callback => {\n          node.removeEventListener(eventName, callback);\n        });\n      }\n      node[eventKey] = [];\n    });\n  }\n\n  forEach(cb) {\n    this.elements.forEach(cb);\n  }\n}\n\nmodule.exports = MutableNodeList;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/mutableNodeList.js\n// module id = 0\n// module chunks = 0","const MutableNodeList = require('./mutableNodeList.js');\n\nconst _docReadyCallbacks = [];\nlet _docReady = false;\n\nwindow.$MD = (selector) => {\n  switch (typeof (selector)) {\n    case \"function\":\n      return registerDocReadyCallback(selector);\n    case \"string\":\n      return getNodesFromDom(selector);\n    case \"object\":\n      if (selector instanceof HTMLElement) {\n        return new MutableNodeList([selector]);\n      }\n  }\n};\n\n$MD.promise = (options) => {\n  return new Promise((resolve, reject) => {\n\n    const request = new XMLHttpRequest();\n    const defaults = {\n      contentType: 'application/x-www-form-urlencoded; charset=UTF-8',\n      method: \"GET\",\n      url: \"\",\n      success: () => {},\n      error: () => {},\n      data: {},\n    };\n    options = $MD.mergeOptions(defaults, options);\n    options.method = options.method.toUpperCase();\n\n    if (options.method === \"GET\") {\n      options.url += \"?\" + toQueryString(options.data);\n    }\n\n    request.open(options.method, options.url, true);\n\n    request.onload = e => {\n      if (request.status === 200) {\n        options.success(request.response);\n        resolve(request.response);\n      } else {\n        options.error(request.response);\n        reject(request.response);\n      }\n    };\n\n    request.onerror = () => reject(Error(\"Network Error\"));\n\n    request.send(JSON.stringify(options.data));\n  });\n};\n\n$MD.getJSON = (options) => {\n  return new Promise((resolve, reject) => {\n\n    const request = new XMLHttpRequest();\n    const defaults = {\n      contentType: 'application/x-www-form-urlencoded; charset=UTF-8',\n      method: \"GET\",\n      url: \"\",\n      success: () => {},\n      error: () => {},\n      data: {},\n    };\n    options = $MD.mergeOptions(defaults, options);\n    options.method = options.method.toUpperCase();\n\n    if (options.method === \"GET\") {\n      options.url += \"?\" + toQueryString(options.data);\n    }\n\n    request.open(options.method, options.url, true);\n\n    request.onload = e => {\n      if (request.status === 200) {\n        options.success(request.response);\n        resolve(JSON.parse(request.response));\n      } else {\n        options.error(request.response);\n        reject(JSON.parse(request.response));\n      }\n    };\n\n    request.onerror = () => reject(Error(\"Network Error\"));\n\n    request.send(JSON.stringify(options.data));\n  });\n};\n\n\n$MD.mergeOptions = (base, ...otherObjs) => {\n  otherObjs.forEach(obj => {\n    for (let prop in obj) {\n      base[prop] = obj[prop];\n    }\n  });\n  return base;\n};\n\n//helper methods\ntoQueryString = obj => {\n  let result = \"\";\n  for (let prop in obj) {\n    if (obj.hasOwnProperty(prop)) {\n      result += prop + \"=\" + obj[prop] + \"&\";\n    }\n  }\n  return result.substring(0, result.length - 1);\n};\n\nregisterDocReadyCallback = func => {\n  if (!_docReady) {\n    _docReadyCallbacks.push(func);\n  } else {\n    func();\n  }\n};\n\ngetNodesFromDom = selector => {\n  const nodes = document.querySelectorAll(selector);\n  const nodes_array = Array.from(nodes);\n  return new MutableNodeList(nodes_array);\n};\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  _docReady = true;\n  _docReadyCallbacks.forEach(func => func());\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/main.js\n// module id = 1\n// module chunks = 0"],"sourceRoot":""}